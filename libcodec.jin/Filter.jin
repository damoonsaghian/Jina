Bool := #true #false

;ns Bool
	and = { self, arg2 ::(->Bool)& -> Bool |
		self >> {
			#true | arg2()
			#false | #false
		}
	}
	
	or = { self, arg2 ::(->Bool)& -> Bool |
		self >> {
			#true | #true
			#false | arg2()
		}
	}
	
	neg = { self -> Bool |
		self >> {
			#true | #false
			#false | #true
		}
	}
	
	then[a] = { self, then ::(->a)& -> ?a |
		self >> {
			#true | #result then()
			#false | #null
		}
	}
