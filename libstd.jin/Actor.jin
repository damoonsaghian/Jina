;; declare required functions and types from glib2
;c3 extern fn ...;
;c3 typedef ... = any;

Message := 

Actor[s]' :=
	state: s,
	messages: List[state: s! -> Bool]

;ns Actor[s]
	new = { state :s -> Actor[s] |
		;; append a tuple of actor's ID and memory address, to GLOBAL_actors_list
		;c3
		
		Actor[s] state messages: []
	}
	
	do = { self!, message :(state: s! -> Bool) |
		;; notify that there is a new message
		;c3
		self.messages.append message
	}
