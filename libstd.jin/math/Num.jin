;; declare required functions and types from flint
;c3 extern fn ...;
;c3 typedef ... = any;

;; https://flintlib.org/doc/

;; https://flintlib.org/doc/fmpz.html
;c3 typedef NumI = fmpz_t;

;ns NumI ::Ord ::CharRep

NumAny := Num \ NumI \ Int \ Float

;; https://flintlib.org/doc/arb.html
;c3 typedef Num = arb_t;

;ns Num ::OrdMaybe ::CharRep
	add = { self&, addend :NumAny& -> Num |
	}
	
	sub = { self, subtrahend :NumAny& -> Num |
	}
	
	mul = { self&, multiplicand :NumAny& -> Num |
	}
	
	div = { self&, divisor :NumAny& -> Num |
	}
	
	exp = { self&, exponent :NumAny& -> Num |
	}
	
	neg = { self$ -> Num$ |
	}
	
	abs = { self$ -> Num$ |
	}
	
	cos = { self& -> Num |
	}
	acos = { self& -> Num |
	}
	cosh = { self& -> Num |
	}
	atanh = { self& -> Num |
	}
	sin = { self& -> Num |
	}
	asin = { self& -> Num |
	}
	sinh = { self& -> Num |
	}
	tan = { self& -> Num |
	}
	atan = { self& -> Num |
	}
	atan2 = { self& -> Num |
	}
	tanh = { self& -> Num |
	}
	
	log = { self& -> Num |
	}
	log2 = { self& -> Num |
	}
	log10 = { self& -> Num |
	}
	
	inf =
	
	;; base of the natural logarithm
	e =
	pi =
	
	;; OrdMaybe
	
	equal = { self&, other :Num& -> ?Bool |
	}
	
	after = { self&, other :Num& -> ?Bool |
	}
	
	;; CharRep
	to'chars = { self& -> CharS |
	}
