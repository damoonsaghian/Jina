;tr Ord
	equal :(self, other: self -> Bool)
	
	after :(self, other: self -> Bool)
	
	after'equal = { self, other :self -> Bool |
		self > other \\ self == other
	}

tr OrdMaybe
	equal :(self, other: self -> ?Bool)
	
	after :(self, other: self -> ?Bool)
	
	after'equal = { self, other :self -> ?Bool |
		self > other >> {
			:#null | #null
			is'less :Bool |
				self == other >> {
					:#null | #null
					is'equal :Bool | is'less \\ is'equal
				}
		}	
	}
	